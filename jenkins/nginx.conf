events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=jenkins:10m rate=10r/s;

    # Jenkins server
    upstream jenkins {
        server jenkins:8080;
    }

    # Docker Registry
    upstream registry {
        server docker-registry:5000;
    }

    # SonarQube
    upstream sonarqube {
        server sonarqube:9000;
    }

    server {
        listen 80;
        server_name event-booking.local jenkins.event-booking.local;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # Jenkins main application
        location / {
            limit_req zone=jenkins burst=20 nodelay;
            
            proxy_pass http://jenkins;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Jenkins
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # GitHub webhook endpoint
        location /jenkins/github-webhook/ {
            limit_req zone=jenkins burst=5 nodelay;
            
            proxy_pass http://jenkins/github-webhook/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-GitHub-Event $http_x_github_event;
            proxy_set_header X-GitHub-Delivery $http_x_github_delivery;
            proxy_set_header X-Hub-Signature-256 $http_x_hub_signature_256;
        }

        # Jenkins API
        location /api/ {
            proxy_pass http://jenkins/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Jenkins static resources
        location /static/ {
            proxy_pass http://jenkins/static/;
            proxy_set_header Host $host;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # Docker Registry server
    server {
        listen 80;
        server_name registry.event-booking.local;

        location / {
            proxy_pass http://registry;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # SonarQube server
    server {
        listen 80;
        server_name sonar.event-booking.local;

        location / {
            proxy_pass http://sonarqube;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for SonarQube
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    # Health check endpoint
    server {
        listen 80;
        server_name health.event-booking.local;

        location / {
            access_log off;
            return 200 "Jenkins CI/CD Platform is running\n";
            add_header Content-Type text/plain;
        }

        location /jenkins {
            proxy_pass http://jenkins/;
            proxy_set_header Host $host;
        }

        location /registry {
            proxy_pass http://registry/;
            proxy_set_header Host $host;
        }

        location /sonar {
            proxy_pass http://sonarqube/;
            proxy_set_header Host $host;
        }
    }
}
